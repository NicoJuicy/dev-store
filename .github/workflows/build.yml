name: Build devStore

on:
  push:
    paths:
      - 'global.json'
      - 'src/**'
      - '.github/**'
    branches:
      - main
  pull_request:
    paths:
      - 'global.json'
      - 'src/**'
      - '.github/**'
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  
  versioning:
    name: Versioning
    runs-on: ubuntu-latest

    outputs: 
      TAG: ${{ steps.tagging.outputs.TAG }}
    
    steps:  
      - name: Tagging
        id: tagging
        run: |
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
              echo "TAG=latest" >> $GITHUB_OUTPUT
          else
              echo "TAG=preview" >> $GITHUB_OUTPUT
          fi
  
  build-solution:
    name: Build solution
    runs-on: ubuntu-latest
    needs: versioning
    
    env:
      TAG: ${{ needs.versioning.outputs.TAG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
          
      - name: Restore dependencies
        run: dotnet restore ./DevStore.slns

      - name: Build solution
        run: dotnet build ./DevStore.slnx --configuration Release --no-restore
  
  build-docker-image-services:
    name: Build docker image services
    runs-on: ubuntu-latest
    needs: build-solution
    
    env:
      TAG: ${{ needs.versioning.outputs.TAG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Build docker images
        working-directory: ./docker
        run: |
          TAG=${{ env.TAG }} docker compose -f ./docker-compose-local.yml build

      - name: Push docker images
        working-directory: ./docker
        run: |
          TAG=${{ env.TAG }} docker compose -f ./docker-compose-local.yml push
