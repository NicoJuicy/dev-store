name: devstore

x-common-variables: &common-variables
    ASPNETCORE_ENVIRONMENT: Docker
    ASPNETCORE_URLS: https://+:443;http://+:80
    ASPNETCORE_Kestrel__Certificates__Default__Password: 9HoGMnb7Lu8NFdHBz4Vq2rtKivzMhmMXhtvuB4TZcLMmbWfFmDQCjJeLURAJ4GYe
    ASPNETCORE_Kestrel__Certificates__Default__Path: /https/devstore.academy-localhost.pfx
    AppSettings__DatabaseType: SqlServer
    RabbitMqTransportOptions__Host: "rabbitmq"
    RabbitMqTransportOptions__Port: 5672
    RabbitMqTransportOptions__User: "devstore"
    RabbitMqTransportOptions__Pass: "devstore"
    RabbitMqTransportOptions__VirtualHost: "/"

include:
    - docker-common-resources.yml

services:
    
    api-identity:
        image: desenvolvedorio/devstore-api-identity:${TAG}
        container_name: devstore-api-identity
        build:
            context: ../src
            dockerfile: ./services/DevStore.Identity.API/Dockerfile        
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=LocalDSUsers;User Id=sa;Password=MyDB@123;MultipleActiveResultSets=true;TrustServerCertificate=True;"
        volumes:
            - ./certs:/https:ro
        depends_on:
            generate-pfx:
                condition: service_completed_successfully
            database:
                condition: service_started
            logging:
                condition: service_started
            rabbitmq:
                condition: service_started

    api-cart:
        image: desenvolvedorio/devstore-api-cart:${TAG}
        container_name: devstore-api-cart
        build:
            context: ../src
            dockerfile: ./services/DevStore.ShoppingCart.API/Dockerfile
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=LocalDSShoppingCart;User Id=sa;Password=MyDB@123;MultipleActiveResultSets=true;TrustServerCertificate=True;"
        volumes:
            - ./certs:/https:ro
        depends_on:
            api-identity:
                condition: service_started

    api-catalog:
        image: desenvolvedorio/devstore-api-catalog:${TAG}
        container_name: devstore-api-catalog
        build:
            context: ../src
            dockerfile: ./services/DevStore.Catalog.API/Dockerfile
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=LocalDSCatalog;User Id=sa;Password=MyDB@123;MultipleActiveResultSets=true;TrustServerCertificate=True;"
        volumes:
            - ./certs:/https:ro
        depends_on:
            api-identity:
                condition: service_started

    api-customers:
        image: desenvolvedorio/devstore-api-customers:${TAG}
        container_name: devstore-api-customers
        build:
            context: ../src
            dockerfile: ./services/DevStore.Customers.API/Dockerfile
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=LocalDSCustomers;User Id=sa;Password=MyDB@123;MultipleActiveResultSets=true;TrustServerCertificate=True;"
        volumes:
            - ./certs:/https:ro
        depends_on:
            api-identity:
                condition: service_started

    api-order:
        image: desenvolvedorio/devstore-api-order:${TAG}
        container_name: devstore-api-order
        build:
            context: ../src
            dockerfile: ./services/DevStore.Orders.API/Dockerfile
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=LocalDSOrders;User Id=sa;Password=MyDB@123;MultipleActiveResultSets=true;TrustServerCertificate=True;"
            Logging__Console__FormatterName: ""
        volumes:
            - ./certs:/https:ro
        depends_on:
            api-identity:
                condition: service_started

    api-billing:
        image: desenvolvedorio/devstore-api-billing:${TAG}
        container_name: devstore-api-billing
        build:
            context: ../src
            dockerfile: ./services/DevStore.Billing.API/Dockerfile
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=LocalDSBilling;User Id=sa;Password=MyDB@123;MultipleActiveResultSets=true;TrustServerCertificate=True;"
        volumes:
            - ./certs:/https:ro
        depends_on:
            api-identity:
                condition: service_started
            api-order:
                condition: service_started

    api-bff-checkout:
        image: desenvolvedorio/devstore-api-bff-checkout:${TAG}
        container_name: devstore-api-bff-checkout
        build:
            context: ../src
            dockerfile: ./api-gateways/DevStore.Bff.Checkout/Dockerfile
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=LocalDSStatus;User Id=sa;Password=MyDB@123;MultipleActiveResultSets=true;TrustServerCertificate=True;"
        volumes:
            - ./certs:/https:ro
        depends_on:
            api-identity:
                condition: service_started
            api-cart:
                condition: service_started
            api-billing:
                condition: service_started
            api-order:
                condition: service_started

    web-mvc:
        image: desenvolvedorio/devstore-web-mvc-ecommerce:${TAG}
        container_name: devstore-web-mvc-ecommerce
        build:
            context: ../src
            dockerfile: ./web/DevStore.WebApp.MVC/Dockerfile        
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=LocalDSStatus;User Id=sa;Password=MyDB@123;MultipleActiveResultSets=true;TrustServerCertificate=True;"
            LC_ALL: "en_US.UTF-8"
            LANG: "en_US.UTF-8"
            # Change the two lines above to your culture (ex pt_BR)
            USE_HTTPS_REDIRECTION: "false"
        expose:
            - 80
            - 443
        volumes:
            - ./certs:/https:ro
            - dpkeys:/var/data_protection_keys/
        depends_on:
            api-catalog:
                condition: service_started
            api-identity:
                condition: service_started
            api-customers:
                condition: service_started
            api-bff-checkout:
                condition: service_started

    web-status:
        image: desenvolvedorio/devstore-web-status:${TAG}
        container_name: devstore-web-status
        build:
            context: ../src
            dockerfile: ./web/DevStore.WebApp.Status/Dockerfile
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=LocalDSStatus;User Id=sa;Password=MyDB@123;MultipleActiveResultSets=true;TrustServerCertificate=True;"
        volumes:
            - ./certs:/https:ro
            - ./certs/devstore.crt:/usr/local/share/ca-certificates/devstore.crt
        depends_on:
            api-identity:
                condition: service_started

volumes:
    dpkeys:
    nginx-certs:
