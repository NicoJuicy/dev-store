name: devstore

x-common-variables: &common-variables
    ASPNETCORE_ENVIRONMENT: Docker
    ASPNETCORE_URLS: https://+:443;http://+:80
    ASPNETCORE_Kestrel__Certificates__Default__Password: 9HoGMnb7Lu8NFdHBz4Vq2rtKivzMhmMXhtvuB4TZcLMmbWfFmDQCjJeLURAJ4GYe
    ASPNETCORE_Kestrel__Certificates__Default__Path: /https/devstore.academy-localhost.pfx
    AppSettings__DatabaseType: SqlServer
    MessageQueueConnection__MessageBus: host=rabbitmq:5672;publisherConfirms=true;timeout=30;username=devstore;password=devstore

services:
    
    database:
        image: mcr.microsoft.com/mssql/server:2022-latest
        container_name: devstore-mssql
        expose:
            - 1433
        environment:
            SA_PASSWORD: "MyDB@123"
            ACCEPT_EULA: "Y"
        healthcheck:
            test: [ "CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P MyDB@123 -Q 'SELECT 1'" ]
            interval: 3s
            timeout: 5s
            retries: 10
            start_period: 5s            
    
    rabbitmq:
        image: rabbitmq:4.1
        container_name: devstore-rabbit
        hostname: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        expose:
            - 5672
        environment:
            RABBITMQ_DEFAULT_USER: "devstore"
            RABBITMQ_DEFAULT_PASS: "devstore"
        healthcheck: # Add health check to ensure RabbitMQ is ready
            test: [ "CMD", "rabbitmqctl", "status" ]
            interval: 3s
            timeout: 5s
            retries: 10
            start_period: 5s
    
    logging:
        image: datalust/seq:2025.1
        container_name: devstore-seq
        ports:
            - 5341:80
        environment:
            ACCEPT_EULA: "Y"
            SEQ_FIRSTRUN_ADMINPASSWORD: "MyAdminPassword"
        healthcheck:
            test: "/seqsvr/Client/seqcli node health -s http://localhost"
            interval: 3s
            timeout: 5s
            retries: 10
            start_period: 5s    
    
    generate-pfx:
        image: emberstack/openssl:latest # last update October 2019
        container_name: generate-pfx
        volumes:
            - ./certs:/https:rw
            - nginx-certs:/nginx-certs:rw
        command: >
            sh -c "[ -e "./https/devstore.academy-localhost.pfx" ] && echo File Already exist || (
                   rm -f /https/devstore.academy-localhost.pfx &&
                   openssl genrsa -out devstore.rsa 2048 &&
                   openssl req -sha256 -new -key devstore.rsa -out devstore.csr -subj '/CN=localhost' &&
                   openssl x509 -req -sha256 -days 365 -in devstore.csr -signkey devstore.rsa -out devstore.crt &&
                   openssl pkcs12 -export -out /https/devstore.academy-localhost.pfx -inkey devstore.rsa -in devstore.crt -password pass:9HoGMnb7Lu8NFdHBz4Vq2rtKivzMhmMXhtvuB4TZcLMmbWfFmDQCjJeLURAJ4GYe &&
                   rm devstore.rsa devstore.csr devstore.crt)"             

    api-identity:
        image: desenvolvedorio/devstore-api-identity:latest
        container_name: devstore-api-identity
        restart: always
        environment:            
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=DSUsers;MultipleActiveResultSets=true;User Id=sa;Password=MyDB@123"
        volumes:
            - ./certs:/https:ro
        depends_on:
            generate-pfx:
                condition: service_completed_successfully
            database:
                condition: service_healthy
            logging:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy

    api-cart:
        image: desenvolvedorio/devstore-api-cart:latest
        container_name: devstore-api-cart
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=DSShoppingCart;MultipleActiveResultSets=true;User Id=sa;Password=MyDB@123"
        volumes:
            - ./certs:/https:ro
        depends_on:
            api-identity:
                condition: service_started

    api-catalog:
        image: desenvolvedorio/devstore-api-catalog:latest
        container_name: devstore-api-catalog
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=DSCatalog;MultipleActiveResultSets=true;User Id=sa;Password=MyDB@123"
        volumes:
            - ./certs:/https:ro
        depends_on:
            api-identity:
                condition: service_started

    api-customers:
        image: desenvolvedorio/devstore-api-customers:latest
        container_name: devstore-api-customers
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=DSCustomers;MultipleActiveResultSets=true;User Id=sa;Password=MyDB@123"
        volumes:
            - ./certs:/https:ro
        depends_on:
            api-identity:
                condition: service_started

    api-order:
        image: desenvolvedorio/devstore-api-order:latest
        container_name: devstore-api-order
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=DSOrders;MultipleActiveResultSets=true;User Id=sa;Password=MyDB@123"
            Logging__Console__FormatterName: ""
        volumes:
            - ./certs:/https:ro
        depends_on:
            api-identity:
                condition: service_started

    api-billing:
        image: desenvolvedorio/devstore-api-billing:latest
        container_name: devstore-api-billing
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=DSBilling;MultipleActiveResultSets=true;User Id=sa;Password=MyDB@123"
        volumes:
            - ./certs:/https:ro
        depends_on:
            api-identity:
                condition: service_started
            api-order:
                condition: service_started
    
    api-bff-checkout:
        image: desenvolvedorio/devstore-api-bff-checkout:latest
        container_name: devstore-api-bff-checkout
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=DSStatus;MultipleActiveResultSets=true;User Id=sa;Password=MyDB@123"
        volumes:
            - ./certs:/https:ro
        depends_on:
            - api-identity
            - api-cart
            - api-billing
            - api-order
    
    web-mvc:
        image: desenvolvedorio/devstore-web-mvc-ecommerce:latest
        container_name: devstore-web-mvc-ecommerce
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=DSStatus;MultipleActiveResultSets=true;User Id=sa;Password=MyDB@123"
            LC_ALL: "en_US.UTF-8"
            LANG: "en_US.UTF-8"
            # Change the two lines above to your culture (ex pt_BR)
            USE_HTTPS_REDIRECTION: "false"
        expose:
            - 80
            - 443
        volumes:
            - ./certs:/https:ro
            - dpkeys:/var/data_protection_keys/
        depends_on:
            - api-catalog
            - api-identity
            - api-customers
            - api-bff-checkout
    
    web-status:
        image: desenvolvedorio/devstore-web-status:latest
        container_name: devstore-web-status
        restart: always
        environment:
            <<: *common-variables
            CUSTOMCONNSTR_DefaultConnection: "Server=database;Database=DSStatus;MultipleActiveResultSets=true;User Id=sa;Password=MyDB@123"
        volumes:
            - ./certs:/https:ro
            - ./certs/devstore.crt:/usr/local/share/ca-certificates/devstore.crt
        depends_on:
            - web-mvc
    
    devstore-server:
        image: nginx:1.29
        restart: always
        volumes:
            - ./nginx/devstore.conf:/etc/nginx/conf.d/default.conf:ro
            - nginx-certs:/etc/nginx/certs:ro
        ports:
            - "7500:80"
            - "7501:443"
            - "7510:8080"
            - "7511:4443"
        depends_on:
            generate-pfx:
                condition: service_completed_successfully
            web-mvc:
                condition: service_started
            web-status:
                condition: service_started

volumes:
    dpkeys:
    nginx-certs:
